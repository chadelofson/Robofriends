{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js","robots.js"],"names":["Card","name","email","id","className","src","alt","CardList","cardComponent","robots","map","user","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","children","style","overflowY","border","height","ErrorBoundry","props","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","a","fetch","response","json","users","filteredRobots","filter","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","console","log","username","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e302323c.chunk.js","sourcesContent":["// import React from 'react';\n\nconst Card = ({ name, email, id }) => {\n  return (\n    <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n      <img src={`https://robohash.org/${id}?200x200`} alt='robots' />\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import Card from './Card';\n\nconst CardList = ({ robots }) => {\n  const cardComponent = robots.map((user) => {\n    return (\n      <Card key={user.id} id={user.id} name={user.name} email={user.email} />\n    );\n  });\n  return <div>{cardComponent}</div>;\n};\n\nexport default CardList;\n","const SearchBox = ({ searchField, searchChange }) => {\n  return (\n    <div>\n      <input\n        type='search'\n        placeholder='search robots'\n        onChange={searchChange}\n      />\n      ;\n    </div>\n  );\n};\n\nexport default SearchBox;\n","const Scroll = ({ children }) => {\n  return (\n    <div\n      style={{\n        overflowY: 'scroll',\n        border: '1px solid black',\n        height: '500px',\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Scroll;\n","import { Component } from 'react';\n\nclass ErrorBoundry extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false,\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Ooops. That is not good</h1>;\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundry;\n","import { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      searchField: '',\n    };\n  }\n\n  async componentDidMount() {\n    const response = await fetch('https://jsonplaceholder.typicode.com/users');\n    const users = await response.json();\n    this.setState({ robots: users });\n  }\n\n  onSearchChange = (event) => {\n    this.setState({ searchField: event.target.value });\n  };\n\n  render() {\n    const { robots, searchField } = this.state;\n    const filteredRobots = robots.filter((robots) => {\n      return robots.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n\n    return !robots.length ? (\n      <h1>Loading</h1>\n    ) : (\n      <div className='tc'>\n        <h1 className='f1'>RoboFriends</h1>\n        <SearchBox\n          searchField={searchField}\n          searchChange={this.onSearchChange}\n        />\n        <Scroll>\n          <ErrorBoundry>\n            <CardList robots={filteredRobots} />\n          </ErrorBoundry>\n        </Scroll>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport tachyons from 'tachyons';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport { robots } from './robots';\n\nconsole.log(robots);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const robots = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz'\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv'\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net'\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org'\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca'\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info'\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz'\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me'\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io'\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz'\n  }\n];\n"],"sourceRoot":""}